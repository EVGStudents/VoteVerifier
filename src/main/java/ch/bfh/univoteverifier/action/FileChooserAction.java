/*
 *
 *  Copyright (c) 2013 Berner Fachhochschule, Switzerland.
 *   Bern University of Applied Sciences, Engineering and Information Technology,
 *   Research Institute for Security in the Information Society, E-Voting Group,
 *   Biel, Switzerland.
 *
 *   Project independent UniVoteVerifier.
 *
 */
package ch.bfh.univoteverifier.action;

import ch.bfh.univoteverifier.common.IFileManager;
import ch.bfh.univoteverifier.common.Messenger;
import ch.bfh.univoteverifier.gui.GUIconstants;
import ch.bfh.univoteverifier.gui.MainGUI;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ResourceBundle;
import javax.swing.AbstractAction;
import static javax.swing.Action.NAME;
import javax.swing.JFileChooser;
import javax.swing.JPanel;

/**
 * An Action that manages the action of choosing a file.
 *
 * @author prinstin
 */
public class FileChooserAction extends AbstractAction {

    ResourceBundle rb;
    JPanel innerPanel;
    IFileManager fm;
    Messenger msgr;

    /**
     * Create an instance of this Action.
     *
     * @param mainGUI Used to append text to the Console
     * @param qrCodeFile The reference to the File object where the fileChooser
     * stores the path to the QRCode
     */
    public FileChooserAction(Messenger msgr, IFileManager fm) {
        this.msgr = msgr;
        this.fm = fm;
        rb = ResourceBundle.getBundle("error", GUIconstants.getLocale());
        this.putValue(NAME, rb.getString("selectFile"));
    }

    /**
     * This method is called when an action is performed on a component to which
     * this Action has been registered
     *
     * @param e ActionEvent generated by the component on which an action was
     * performed.
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(innerPanel, rb.getString("selectFile"));
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            if (file == null) {
                msgr.sendFatalErrorMsg(rb.getString("invalidFile"));
            } else {
                String path = "\n" + file.getPath();
                msgr.sendErrorMsg("File Selected: "+path);
                fm.setFile(file);
            }
             
        }
    }
}
