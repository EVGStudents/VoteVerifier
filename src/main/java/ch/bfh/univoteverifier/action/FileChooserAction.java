/*
 *
 *  Copyright (c) 2013 Berner Fachhochschule, Switzerland.
 *   Bern University of Applied Sciences, Engineering and Information Technology,
 *   Research Institute for Security in the Information Society, E-Voting Group,
 *   Biel, Switzerland.
 *
 *   Project independent VoteVerifier.
 *
 */
package ch.bfh.univoteverifier.action;

import ch.bfh.univoteverifier.common.IFileManager;
import ch.bfh.univoteverifier.common.MessengerManager;
import ch.bfh.univoteverifier.gui.GUIconstants;
import ch.bfh.univoteverifier.gui.MiddlePanel;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ResourceBundle;
import java.util.logging.Level;
import javax.swing.AbstractAction;
import static javax.swing.Action.NAME;
import javax.swing.JFileChooser;
import java.util.logging.Logger;

/**
 * An Action that manages the action of choosing a file.
 *
 * @author prinstin
 */
public class FileChooserAction extends AbstractAction {

    private ResourceBundle rb;
    private MiddlePanel middlePanel;
    private IFileManager fm;
    private MessengerManager mm;
    private static final Logger LOGGER = Logger.getLogger(FileChooserAction.class.getName());

    /**
     * Create an instance of this Action.
     *
     * @param mainGUI Used to append text to the Console
     * @param qrCodeFile The reference to the File object where the fileChooser
     * stores the path to the QRCode
     */
    public FileChooserAction(MiddlePanel middlePanel, MessengerManager mm, IFileManager fm) {
        this.middlePanel = middlePanel;
        this.mm = mm;
        this.fm = fm;
        rb = ResourceBundle.getBundle("error", GUIconstants.getLocale());
        this.putValue(NAME, rb.getString("selectFile"));
    }

    /**
     * This method is called when an action is performed on a component to which
     * this Action has been registered
     *
     * @param e ActionEvent generated by the component on which an action was
     * performed.
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(middlePanel, rb.getString("selectFile"));
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            if (file == null) {
                String invalidFileMsg = rb.getString("invalidFile");
                mm.getDefaultMessenger().sendSetupError(invalidFileMsg);
            } else {
                String path = "\n" + file.getPath();
                LOGGER.log(Level.INFO, "PATH OF FILE RECEIVED: " + path);
                mm.getDefaultMessenger().sendFileSelected(file.getName());
                fm.setFile(file);
            }

        }
    }
}
